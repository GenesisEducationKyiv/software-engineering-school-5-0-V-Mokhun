// @generated by protoc-gen-es v1.10.1 with parameter "target=ts"
// @generated from file proto/job.proto (package job, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message job.ConfirmEmailJobData
 */
export class ConfirmEmailJobData extends Message<ConfirmEmailJobData> {
  /**
   * @generated from field: string email = 1;
   */
  email = "";

  /**
   * @generated from field: string city = 2;
   */
  city = "";

  /**
   * @generated from field: string confirmToken = 3;
   */
  confirmToken = "";

  constructor(data?: PartialMessage<ConfirmEmailJobData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "job.ConfirmEmailJobData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "city", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "confirmToken", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfirmEmailJobData {
    return new ConfirmEmailJobData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfirmEmailJobData {
    return new ConfirmEmailJobData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfirmEmailJobData {
    return new ConfirmEmailJobData().fromJsonString(jsonString, options);
  }

  static equals(a: ConfirmEmailJobData | PlainMessage<ConfirmEmailJobData> | undefined, b: ConfirmEmailJobData | PlainMessage<ConfirmEmailJobData> | undefined): boolean {
    return proto3.util.equals(ConfirmEmailJobData, a, b);
  }
}

